library(ggplot2)
# Загрузим необходимые пакеты
library(RColorBrewer)
library(DAAG)
# Загрузим необходимые пакеты
library(RColorBrewer)
library(DAAG)
# Загрузим данные и немного их отредактируем
data("leafshape")
leafshape
leaafshape$arch
leafshape$arch
x = leafshape$arch
plots(x)
plot(x)
?factor
?rnorm
rnorm(13, mean=1, sd=1)
plot1data <- data.frame("x" = rnorm(13, mean=1, sd=1))
ggplot(plot1data, aes(x=x)) + geom_density()
plot1data <- data.frame("x" = rnorm(131313, mean=1, sd=1))
ggplot(plot1data, aes(x=x)) + geom_density()
plot1data <- data.frame("x_data" = rnorm(131313, mean=1, sd=1))
ggplot(plot1data, aes(x=x_data)) + geom_density()
plot1data <- data.frame("super important data1" = rnorm(131313, mean=1, sd=1))
ggplot(plot1data, aes(x=super important data1)) + geom_density()
ggplot(plot1data, aes(x="super important data1")) + geom_density()
plot1data <- data.frame("super important data1" = rnorm(131313, mean=1, sd=1))
ggplot(plot1data, aes(x="super important data1")) + geom_density()
ggplot(plot1data, aes(x=super_important_data1)) + geom_density()
plot1data <- data.frame("super_important_data1" = rnorm(131313, mean=1, sd=1))
ggplot(plot1data, aes(x=super_important_data1)) + geom_density()
t.frame = data.frame(t.values,
df3 = dt(t.values,3),
df10 = dt(t.values,10),
std_normal = dnorm(t.values))
t.values <- data.frame("super_important_data1" = rnorm(131313, mean=1, sd=1))
t.frame = data.frame(t.values,
df3 = dt(t.values,3),
df10 = dt(t.values,10),
std_normal = dnorm(t.values))
t.values <- data.frame("super_important_data1" = rnorm(131313, mean=5000, sd=1313))
t.frame = data.frame(t.values,
df3 = dt(t.values,3),
df10 = dt(t.values,10),
std_normal = dnorm(t.values))
ggplot(plot1data, aes(x=super_important_data1)) + geom_density()
t.frame = data.frame(t.values,
df3 = dt(t.values,3),
df10 = dt(t.values,10),
std_normal = dnorm(t.values))
t.values <- data.frame("super_important_data1" = rnorm(131313, mean=5000, sd=1313),
"super_important_data2" = rnorm(1313, mean=5000, sd=1313))
t.values <- data.frame("super_important_data1" = rnorm(131313, mean=5000, sd=1313),
"super_important_data2" = rnorm(131313, mean=50, sd=130))
ggplot(plot1data, aes(x=super_important_data1)) + geom_density()
t.frame = data.frame(t.values,
df3 = dt(t.values,3),
df10 = dt(t.values,10),
std_normal = dnorm(t.values))
ggplot(t.values, aes(x=super_important_data1)) + geom_density()
ggplot(t.values, aes(x=super_important_data1,super_important_data2)) + geom_density()
?aes
?dnorm
values <- data.frame("super_important_data2" = dnorm(13130, mean=5000, sd=1313))
ggplot(values, aes(x=super_important_data2)) + geom_density()
values <- data.frame("super_important_data2" = dnorm(13130, mean=5000, sd=1313))
values
values
values <- data.frame("super_important_data2" = dnorm(13130, mean=0, sd=1))
values
values <- data.frame("super_important_data2" = rnorm(13130, mean=0, sd=1))
values
values <- data.frame("super_important_data2" = pnorm(13130, mean=0, sd=1))
values
values <- data.frame("super_important_data2" = qnorm(13130, mean=0, sd=1))
values
values <- data.frame("super_important_data2" = rnorm(13130, mean=0, sd=1))
values
ggplot(values, aes(x=super_important_data2)) + geom_density()
values <- data.frame("super_important_data2" = rnorm(130, mean=0, sd=1))
values
ggplot(values, aes(x=super_important_data2)) + geom_density()
values <- data.frame("super_important_data2" = rnorm(130, mean=100, sd=1))
ggplot(values, aes(x=super_important_data2)) + geom_density()
t.frame = data.frame(t.values,
df3 = dt(t.values,3),
df10 = dt(t.values,10),
std_normal = dnorm(t.values))
values1 <- data.frame("super_important_data3" = rnorm(130, mean=100, sd=1))
values2 <- data.frame("super_important_data3" = rnorm(130, mean=120, sd=5))
ggplot(values1, values2, aes(x=super_important_data3/1)) + geom_density()
ggplot(values1, values2, aes(x=super_important_data3)) + geom_density()
ggplot(values1, aes(x=super_important_data3)) + geom_density()
values <- c(values1,values2)
ggplot(values, aes(x=super_important_data3)) + geom_density()
p1 <- ggplot(data=diamonds, aes(x=price, group=cut, fill=cut)) +
geom_density(adjust=1.5) +
theme_ipsum()
library(ggplot2)
library(hrbrthemes)
library(dplyr)
library(tidyr)
library(viridis)
p1 <- ggplot(data=diamonds, aes(x=price, group=cut, fill=cut)) +
geom_density(adjust=1.5) +
theme_ipsum()
library(ggplot2)
library(hrbrthemes)
library(dplyr)
library(tidyr)
library(viridis)
p1 <- ggplot(data=diamonds, aes(x=price, group=cut, fill=cut)) +
geom_density(adjust=1.5) +
theme_ipsum()
p1 <- ggplot(data=diamonds, aes(x=price, group=cut, fill=cut)) +
geom_density(adjust=1.5) +
theme_grey()
data("diamonds")
p1 <- ggplot(data=diamonds, aes(x=price, group=cut, fill=cut)) +
geom_density(adjust=1.5) +
theme_grey()
data1 <- data.frame(
text = c("super3", "important", "data", "here"),
x = c(5, 53, 65, 79),
y = c(6, 66, 56, 72)
)
data1 %>%
filter(text %in% c("super3", "important", "data", "here")) %>%
ggplot( aes(x=value, color=text, fill=text)) +
geom_density(alpha=0.6) +
scale_fill_viridis(discrete=TRUE) +
scale_color_viridis(discrete=TRUE) +
geom_text( data=annot, aes(x=x, y=y, label=text, color=text), hjust=0, size=4.5) +
theme_ipsum() +
theme(
legend.position="none"
) +
ylab("") +
xlab("Assigned Probability (%)")
data1 %>%
filter(text %in% c("super3", "important", "data", "here")) %>%
ggplot( aes(x=value, color=text, fill=text)) +
geom_density(alpha=0.6) +
scale_fill_viridis(discrete=TRUE) +
scale_color_viridis(discrete=TRUE) +
geom_text( data=data1, aes(x=x, y=y, label=text, color=text), hjust=0, size=4.5) +
theme_ipsum() +
theme(
legend.position="none"
) +
ylab("") +
xlab("Assigned Probability (%)")
data1 %>%
filter(text %in% c("super3", "important", "data", "here")) %>%
ggplot( aes(x=value, color=text, fill=text)) +
geom_density(alpha=0.6) +
scale_fill_viridis(discrete=TRUE) +
scale_color_viridis(discrete=TRUE) +
geom_text( data=data1, aes(x=x, y=y, label=text, color=text), hjust=0, size=4.5) +
theme_grey() +
theme(
legend.position="none"
) +
ylab("") +
xlab("Assigned Probability (%)")
data1 %>%
filter(text %in% c("super3", "important", "data", "here")) %>%
ggplot( aes(x=x, color=text, fill=text)) +
geom_density(alpha=0.6) +
scale_fill_viridis(discrete=TRUE) +
scale_color_viridis(discrete=TRUE) +
geom_text( data=data1, aes(x=x, y=y, label=text, color=text), hjust=0, size=4.5) +
theme_grey() +
theme(
legend.position="none"
) +
ylab("") +
xlab("Assigned Probability (%)")
values1 <- data.frame("super_important_data3" = rnorm(130, mean=100, sd=1))
ggplot(values1, aes(x=super_important_data3)) + geom_density()
values1 <- data.frame("super_important_data3" = rnorm(22, mean=2, sd=1))
ggplot(values1, aes(x=super_important_data3)) + geom_density()
values1 <- data.frame("super_important_data3" = rnorm(22, mean=2, sd=0))
ggplot(values1, aes(x=super_important_data3)) + geom_density()
values1 <- data.frame("super_important_data3" = rnorm(22, mean=2, sd=4))
ggplot(values1, aes(x=super_important_data3)) + geom_density()
values1 <- data.frame("super_important_data4" = rnorm(22, mean=2, sd=4))
ggplot(values1, aes(x=super_important_data3)) + geom_density()
ggplot(values1, aes(x=super_important_data4)) + geom_density()
values1 <- data.frame("super_important_data5" = rnorm(10000, mean=2, sd=4))
ggplot(values1, aes(x=super_important_data4)) + geom_density()
ggplot(values1, aes(x=super_important_data5)) + geom_density()
values1 <- data.frame("super_important_data5" = rnorm(10000, mean=1, sd=2))
ggplot(values1, aes(x=super_important_data5)) + geom_density()
library(ggplot2)
library(dplyr)
library(cowplot)
library(corrplot)
library(psych)
library(effsize)
library(pwr)
library(tidyr)
library(car)
finch_12 <- read.csv("C:\Users\jlr10\OneDrive - North-Eastern Federal University in Yakutsk\А-МИ-Г(20)\Институт Биоинформатики\R\5 lect\finch_beaks_2012.csv")
finch_75 <- read.csv("C:\Users\jlr10\OneDrive - North-Eastern Federal University in Yakutsk\А-МИ-Г(20)\Институт Биоинформатики\R\5 lect\finch_beaks_1975.csv")
finch_12 <- read.csv("C:\Users\jlr10\OneDrive - North-Eastern Federal University in Yakutsk\А-МИ-Г(20)\Институт Биоинформатики\R\5 lect\finch_beaks_2012.csv")
finch_12 <- read.csv("C:/Users/jlr10/OneDrive - North-Eastern Federal University in Yakutsk/А-МИ-Г(20)/Институт Биоинформатики/R/5 lect/finch_beaks_2012.csv")
finch_75 <- read.csv("C:/Users/jlr10/OneDrive - North-Eastern Federal University in Yakutsk/А-МИ-Г(20)/Институт Биоинформатики/R/5 lect/finch_beaks_1975.csv")
colnames(finch_75) <- colnames(finch_12)
finch_12$year <- 2012
finch_75$year<-1975
finch_full <- rbind(finch_12, finch_75)
finch_full$year <- as.factor(finch_full$year)
# Проверка распределения на нормальность
# Отрисовка density plot
p_len <- ggplot(finch_full, aes(blength))+geom_density()+facet_grid(year~species)+scale_y_continuous(limits = c(0, 1)) + theme_bw()
p_dep <- ggplot(finch_full, aes(bdepth))+geom_density()+facet_grid(year~species)+scale_y_continuous(limits = c(0, 1)) + theme_bw()
plot_grid(p_dep, p_len, ncol= 1, nrow =2 )
library(ggplot2)
library(dplyr)
library(cowplot)
library(corrplot)
library(psych)
library(effsize)
library(pwr)
library(tidyr)
library(car)
who %>% pivot_longer(
cols = new_sp_m014:newrel_f65,
names_to = c("diagnosis", "gender", "age"),
names_pattern = "new_?(.*)_(.)(.*)",
values_to = "count"
)
#Размеры выборок
cohen.d()
treatment = rnorm(100,mean=10)
control = rnorm(100,mean=10.3)
d = (c(treatment,control))
f = rep(c("Treatment","Control"),each=100)
## compute Cohen's d
## treatment and control
cohen.d(treatment,control)
## data and factor
cohen.d(d,f)
## formula interface
cohen.d(d ~ f)
## compute Hedges' g
cohen.d(d,f,hedges.correction=TRUE)
cohen.ES(test = 't', size = 'small')
plot_grid(p_dep, p_len)
qqPlot(finch_full$bdepth)
# T-test
test_data <- finch_full %>% filter(species == "scandens") %>% select(blength, year)
t_test_result <- t.test(blength~year, data = test_data)
drivers <- rbind(c(20,15), c(11,12), c(7,9))
chisq.test(drivers)
#воссоздадим таблицу
patients <- rbind(c(18, 7), c(6, 13))
#подпишем строки и столбцы
colnames(patients) <- c("Yes", "No")
rownames(patients) <- c("Placebo", "Aspirin")
#вот график, который нам нужен
mosaicplot(patients, color=T, shade=T,
ylab="Thrombosis", xlab="Group")
#а вот так можно в точности воспроизвести рисунок, который мы видели
mosaicplot(patients, color=T, shade=T,
ylab="Thrombosis", xlab="Group", cex.axis=1, main="")
#воссоздадим таблицу
patients2 <- rbind(c(25, 1), c(3, 30))
#подпишем строки и столбцы
colnames(patients2) <- c("Yes", "No")
rownames(patients2) <- c("Placebo", "Aspirin")
#вот наш график
mosaicplot(patients2, color=T, shade=T,
ylab="Thrombosis", xlab="Group", cex.axis=1, main="")
data("car")
data("Solis")
data("Soils")
data("Soils")
data("car")
data("mtcars")
force(mtcars)
View(test_data)
data("mtcars")
model <- aov(mpg~cyl, data=mtcars)
summary(model)
TukeyHSD(model, conf.level=.95)
model <- aov(cyl~mpg, data=mtcars)
summary(model)
TukeyHSD(model, conf.level=.95)
tapply(chocolate$Sabor, chocolate$Tipo, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
ajuste <- lm(mtcars$mpg ~ mtcars$cyl)
summary(ajuste)
anova(ajuste)
a1 <- aov(mtcars$mpg ~ mtcars$cyl)
posthoc <- TukeyHSD(x=a1, 'mtcars$cyl', conf.level=0.95)
install.packages("car", dependencies=TRUE, repos='http://cran.rstudio.com/')
data("Soils")
data("car")
data("Soils")
install.packages("Soils", dependencies=TRUE, repos='http://cran.rstudio.com/')
install.packages("soils", repos="http://R-Forge.R-project.org")
data("Soils")
data("soils")
install.packages("soils", repos="http://R-Forge.R-project.org")
data("soils")
data("car")
data(soils)
data("Soils")
library(car)
df <- Soils
df
model <- lm(pH~Depth)
model <- lm(df$pH~df$Depth)
summary(model)
data("mtcars")
aov(cyl~mpg)
aov(cyl~mpg)
data("mtcars")
aov(cyl~mpg)
aov(mtcars$cyl~mtcars$mpg)
summary(aov(mtcars$cyl~mtcars$mpg))
TukeyHSD(aov(mtcars$cyl~mtcars$mpg))
TukeyHSD(aov(mtcars$cyl~as.factor(mtcars$mpg))
TukeyHSD(aov(mtcars$mpg~as.factor(mtcars$cyl))
TukeyHSD(aov(mtcars$mpg~as.factor(mtcars$cyl)))
TukeyHSD(aov(mtcars$cyl~as.factor(mtcars$mpg)))
load("C:/Users/jlr10/OneDrive - North-Eastern Federal University in Yakutsk/A-IM-G(20)/Bioinformatics Institute/R/.RData")
library(bootcluster)
library(wine)
df <- bootcluster # wine из пакета bootcluster
set.seed(1)
data(wine)
install.packages("bootcluster")
library(bootcluster)
df <- wine # wine из пакета bootcluster
df
df <- data("wine") # wine из пакета bootcluster
df <- wine # wine из пакета bootcluster
df <- 'wine' # wine из пакета bootcluster
df
df <- data('wine') # wine из пакета bootcluster
library(bootcluster)
df <- data('wine') # wine из пакета bootcluster
library(bootcluster)
df <- wine
set.seed(1)
data(wine)
library("devtools")
install_github("hyu-ub/bootcluster")
install.packages("devtools")
library("devtools")
install_github("hyu-ub/bootcluster")
library(bootcluster)
library('bootcluster')
df <- wine
library('bootcluster')
df <- wine
df
pca = prcomp(df, scale=TRUE)
pca.var = pca$sdev^2
pca.var.per = round(pca.var/sum(pca.var)*100, 1)
pca.var.per
pca.var.per = round(pca.var/sum(pca.var)*100, 3)
pca.var.per
39.542*17.836
39.542+17.836
df2 <- subset(wine, select=-c(1))
pca2 <- prcomp(df2, scale=TRUE)
pca2
summary(pca2)
set.seed(1402)
M1=rnorm(7, mean=20, sd=5)
M2=rnorm(7, mean=16, sd=7)
M3=rnorm(7, mean=16, sd=5)
M4=rnorm(7, mean=16, sd=5)
M5=rnorm(7, mean=32, sd=2)
M6=rnorm(7, mean=22, sd=5)
Gene <- c(rep("M1", 7), rep("M2", 7), rep( "M3",7), rep("M1", 7), rep("M2", 7), rep( "M3",7) )
Treatment <- c(rep("UnTr", 21), rep ("Tr", 21))
Effect<- c(M1, M2, M3, M4, M5, M6)
model_data <- data.frame(Gene,Treatment, Effect)
model_data$Gene <- factor(model_data$Gene)
model_data$Treatment <- factor(model_data$Treatment)
model_data$Condition<-factor(paste(model_data$Gene, model_data$Treatment))
M1 <- aov(model_data ~ Gene + Treatment + Condition:type, data = model_data)
M1 <- aov(model_data ~ Gene + Treatment + Condition, data = model_data)
M1 <- aov(model_data ~ Gene + Treatment, data = model_data)
M1 <- aov(model_data ~ Gene + Treatment + Gene:Treatment, data = model_data)
summary(M1)
M2 <- lm(model_data ~ Gene*Treatment, data = model_data)
M2 <- lm(model_data ~ Gene*Effect, data = model_data)
M2 <- lm(Effect ~ Treatment*Gene, data = Effect)
M2 <- lm(Effect ~ Treatment*Gene, data = model_data)
summary(M2)
M1 <- aov(Effect ~ Treatment*Gene, data = model_data)
summary(M1)
?aov
fortify(M1)
library(ggplot2)
fortify(M1)
mylm <- lm(Effect ~  Treatment + Gene, data = model_data)
# Total sum of square
sum(anova(mylm)[,2])
# Total sum of square
sum(anova(mylm)[,1])
# Total sum of square
sum(anova(mylm)[,2])
# Total sum of square
sum(anova(mylm)[,3])
# Total sum of square
sum(anova(mylm)[,2])
library(readxl)
library(vegan)
library(dplyr)
library(ggplot2)
library(grid)
library(ggpubr)
library(factoextra)
library(knitr)
library(magrittr)
library(caret)
library(clusterSim)
setwd('C://Users//jlr10//OneDrive - North-Eastern Federal University in Yakutsk//A-IM-G(20)//Bioinformatics Institute//R//PCA')
reader <-  function(f_ext, PATH) {
lst_files <- list.files(PATH, pattern = paste('*.', f_ext, sep = ''))
df <-  read.csv(paste(PATH, lst_files[1], sep = ''))
for (i in lst_files[-1]) df <- merge(df, read.csv(paste(PATH, i, sep = '')))
return(df)
}
df <- reader('csv', PATH= './/Data//')
df_ver1 <- select(df, -c(material))
#
train_size <- sample(seq_len(nrow(df_ver1)), size = floor(0.75 * nrow(df_ver1)))
train_data <- df_ver1[train_size, ]
test_data <- df_ver1[-train_size, ]
train_d.norm <- data.Normalization(train_data, type="n1", normalization="column")
df <- reader('csv', PATH= './/Data//')
View(df)
df_ver1 <- select(df, -c(material))
df_ver1 <- select(df, -c(material))
df_ver1 <- dplyr::select(df, -c(material))
#
train_size <- sample(seq_len(nrow(df_ver1)), size = floor(0.75 * nrow(df_ver1)))
train_data <- df_ver1[train_size, ]
test_data <- df_ver1[-train_size, ]
train_d.norm <- data.Normalization(train_data, type="n1", normalization="column")
train_data.tv <- train_data$critical_temp
train_data$critical_temp <- NULL
train_data.norm <- data.Normalization(train_data, type="n1", normalization="column")
train_data.tv.norm <- data.Normalization(train_data.tv, type="n1", normalization="column")
train_data.pca <- prcomp(train_data.norm, center=TRUE, scale.=TRUE)
train_data.norm[ , which(apply(train_data.norm, 2, var) != 0)]
train_data.pca <- prcomp(train_data.norm, center=TRUE, scale.=TRUE)
apply
?apply
train_data.norm[,apply(train_data.norm, 2, var, na.rm=TRUE) != 0]
View(train_data.norm)
train_data.pca <- prcomp(train_data.norm, center=TRUE, scale.=TRUE)
train_data.norm <- dplyr::select(train_data.norm,-c(He, Ne, Ar, Kr, Xe, Pm, Po, At, Rn))
train_data.pca <- prcomp(train_data.norm, center=TRUE, scale.=TRUE)
train_data.pca_total <- cbind(train_data.tv.norm, pcs)
pcs <- as.data.frame(train_data.pca$x)
train_data.pca_total <- cbind(train_data.tv.norm, pcs)
View(train_data.pca_total)
plot(train_data.tv.norm, pcs$PC1)
plot(train_data.tv.norm, pcs$PC1)
lmodel <- lm(train_data.tv.norm ~ ., data = train_data.pca_total)
summary(lmodel)
pca11 <- pcs$x[,1]
pca22 <- pcs$x[,2]
pca33 <- pcs$x[,3]
pca44 <- pcs$x[,4]
pca55 <- pcs$x[,5]
pca66 <- pcs$x[,6]
train_data.pca_total_cut <- cbind(train_data.tv.norm, pca11, pca22, pca33, pca44, pca55, pca66)
lmodel_cut <- lm(train_data.tv.norm ~ ., data = train_data.pca_total_cut)
train_data.pca_total_cut <- data.frame(cbind(train_data.tv.norm, pca11, pca22, pca33, pca44, pca55, pca66))
lmodel_cut <- lm(train_data.tv.norm ~ ., data = train_data.pca_total_cut)
summary(lmodel_cut)
View(train_data.pca_total_cut)
###
pca11 <- pcs$x[,1]
pca22 <- pcs$x[,2]
pca33 <- pcs$x[,3]
pca44 <- pcs$x[,4]
pca55 <- pcs$x[,5]
pca66 <- pcs$x[,6]
train_data.pca_total_cut <- data.frame(cbind(train_data.tv.norm, pca11, pca22, pca33, pca44, pca55, pca66))
lmodel_cut <- lm(train_data.tv.norm ~ ., data = train_data.pca_total_cut)
summary(lmodel_cut)
###
pca11 <- train_data.pca$x[,1]
pca22 <- train_data.pca$x[,2]
pca33 <- train_data.pca$x[,3]
pca44 <- train_data.pca$x[,4]
pca55 <- train_data.pca$x[,5]
pca66 <- train_data.pca$x[,6]
train_data.pca_total_cut <- data.frame(cbind(train_data.tv.norm, pca11, pca22, pca33, pca44, pca55, pca66))
lmodel_cut <- lm(train_data.tv.norm ~ ., data = train_data.pca_total_cut)
summary(lmodel_cut)
setwd('.')
reader <-  function(f_ext, PATH) {
lst_files <- list.files(PATH, pattern = paste('*.', f_ext, sep = ''))
df <-  read.csv(paste(PATH, lst_files[1], sep = ''))
for (i in lst_files[-1]) df <- merge(df, read.csv(paste(PATH, i, sep = '')))
return(df)
}
df <- reader('csv', PATH= './/Data//')
View(df)
